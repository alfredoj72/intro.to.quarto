---
title: "Recopilando truquillos"
#author: "Nosotros"
#subtitle: | 
#  Viendo las posibilidades de Layout que tenemos en Quarto
description: |
  Post fake para ir recopilando los truquillos que me van surgiendo
author:
  - name: Pedro J. Pérez
    url: https://perezp44.github.io/pjperez.web/
    affiliation: Universitat de València
    affiliation-url: https://www.uv.es
    orcid: 0000-0001-9375-6330
date: 2023-09-09
categories: [Quarto, pruebas]
image: "./thumbnails/thumbnail_99_pruebas.png"
title-block-banner: true #- {true, false }
draft: false
toc: true
toc-background: "#4474CD" #- no chuta
toc-location: left
toc-depth: 3
theme: sandstone
#css: assets/my_css_file.css
# theme: 
#   - sandstone #sketchy #slate #- litera  superhero darkly
#   - assets/toc.scss
css: assets/css_toc.css
---

Veremos como sale la cosa, veremos cómo lo hago!!


## 1. QUARTO


### Varios autores

- [How to add multiple authors and multiple affiliations with Quarto and export it to MS Word?](https://stackoverflow.com/questions/75347447/how-to-add-multiple-authors-and-multiple-affiliations-with-quarto-and-export-it)


### Caption

- Para centrar el caption de las imágenes, mira [aquí](https://stackoverflow.com/questions/76404758/center-caption-in-quarto)

```css
.caption{
   text-align: center;
}
```


### Teclitas

- En Quarto 1.3 apareció esto los [Keyboard Shortcuts](https://quarto.org/docs/authoring/markdown-basics.html#keyboard-shortcuts). Se insertan "iconos" que simulan unas tecitas con el shortcode "kbd". 

- Por ejemplo, 

::: {.panel-tabset}
### Si escribes esto:


``` md
To print, press {{{< kbd Shift-Ctrl-P >}}}. 

To open an existing new project, 

press {{{< kbd mac=Shift-Command-O win=Shift-Control-O linux=Shift-Ctrl-L >}}}.
```

### Se verá lo siguiente:

To print, press {{< kbd Shift-Ctrl-P >}}. 

To open an existing new project, 

press {{< kbd mac=Shift-Command-O win=Shift-Control-O linux=Shift-Ctrl-L >}}.
:::
<br>

### Fragmentos

- Puede q lo mejor para el tamaño de imágenes etc... sea combinarlo con esto:

```markdown
:::{.column-page} 
or .column-screen for full bleed
contents here
:::
```

### Latex en fig-cap

Se puede poner formulas : <https://fosstodon.org/@juli_nagel/110146398766389608> en las captions de formulas, tablas etc...

```
se pone asin:
#| fig-cap: "This is a caption at $\\alpha =$ .05."


```





### Conditional content

- Se explica [aquí](https://github.com/quarto-dev/quarto-cli/issues/3863) y [aquí](https://quarto.org/docs/authoring/conditional.html)

### Render

- Si haces Render de un QMD, se abre un background job, donde primero, knitr ejecutas los chunks y crea un nuevo documento `.md` que ya incluye el código y su output. El fichero `.md` es procesado por pandoc que crea el formato final.

```bash
#- desde la Terminal
quarto render document.qmd  # default is html
quarto render document.qmd --to pdf
quarto render document.qmd --to docx
```

```r
#- desde la consola
library(quarto)
quarto_render("document.qmd") # defaults to html
quarto_render("document.qmd", output_format = "pdf")
```

 - se puede render con opciones, p.ej:     

```bash
quarto render document.qmd --to html -M code-fold:true                  
quarto render document.qmd --to html -M code-fold:true -P alpha:0.2 -P ratio:0.3     
```

- En [este post](https://parmsam.medium.com/rendering-r-books-to-epub-using-quarto-for-easier-reading-a5b1bfa575ff) Bruno nos cuenta como hacer render de un **Quarto book a epub** o pdf.

- En parametrised, a veces hay que hacer render pero que el output vaya a otro directorio, en [este toot](https://fediscience.org/@jhelvy/109801352523104934)  se ve q esto esta complicaet, así que lo que hace es hacer el render en la misma carpeta donde está el script pero luego mueve los archivos que se han generado: `file.copy(full_path_source,full_path_destination)`


- Si quieres ejecutar un R script desde la Terminal:  

```bash
Rscript -e "rmarkdown::render('document.Rmd')"
```

- Para pasar un documento Word a `.md`. De este [toot](https://mathstodon.xyz/@tschenkel/110027618199749971)

```bash
pandoc -f docx -t markdown foo.docx -o foo.markdown
```



### CHILD

- truco `knitr::knitr_child()` para generar distintas tablas y títulos en qmd programáticamente: <https://fosstodon.org/@MickaelCanouil/109919710663908424>

### Code in the yaml

- Puedes correr código R en el YAML: <https://twitter.com/sharon000/status/1557060949613445120>, tb en las opciones de los chunks, por ejmeplo: ` #| fig-cap: !expr glue::glue("The mean was {mean(airquality$Temp) |> round()}")`. Otro ejemplo: `#| fig-cap: !expr 'paste("Air", "Quality")` [aquí](https://quarto.org/docs/computations/r.html#chunk-options)


### paquetes

- [quartostamp](https://matt-dray.github.io/quartostamp/index.html): un paquete que viene con RStudio addings para insertar divs, callouts etc... Para mi ptse, PERO en [este post](https://www.rostrum.blog/2022/08/11/quartostamp-snorkel/) les encanta.


### Extensiones

- Contar palabras: <https://fediscience.org/@andrew/110146498837984507>

- Para incluir scripts (además funciona lo de code folding): <https://github.com/shafayetShafee/add-code-files>

- para poder ocultar los comentarios en los chunks de R: <https://github.com/shafayetShafee/hide-comment>



## Chorraetas

- Incluir toot's en un callout: <https://fosstodon.org/@mccarthymg/110371193603225628>. Bueno, parace que esta extensión ya lo hace: <https://github.com/shafayetShafee/collapse-social-embeds>

```{r}
#| eval: false
#| echo: true
#| cache: true
devtools::source_gist("00f755efa6e983a3e0fc06b16ab30bb3", filename = "embed_post.R")
embed_post(id = "110311058683298490", instance = "mastodon.social")
```


## 2. PRESENTACIONES


- Puedes usar `preview-links: true` para que los links no se abran en el navegador sino encima de las slides. Docu [aquí](https://quarto.org/docs/presentations/revealjs/presenting.html#preview-links)





## 3. WORKFLOW

### RStudio

- `usethis::::use_blank_slate()`: para q no guarde .Rdata <https://vis.social/@ijlyttle/109609358559544095>

- El archivo de **configuración de RStudio** está en `~/.config/rstudio/rstudio-prefs.json`: en [este post](https://tidytales.ca/series/2023-01-24_reproducible-data-science/posts/productivity-tips.html) explican muchas cosas para ser más productivo con RStudio

- unas [slides](https://luisdva.github.io/LatinR2022/#/title-slide) de tips para RStudio

- <https://tidytales.ca/series/2023-01-24_reproducible-data-science/posts/productivity-tips.html>

### Snippets


- Sharon: como usar lo snippets: <https://www.infoworld.com/article/3396616/how-to-use-rstudio-code-snippets.html>

- hacer automaticamente un snippet: <https://community.rstudio.com/t/rstudio-selected-code-to-snippet-updating-r-snippets-programmatically/20611>

- snippets de Mock para quarto: Some of my favs for #QuartoPub fenced divs and spans/fragments: <https://gist.github.com/jthomasmock/11acebd4448f171f786e01397df34116>  <https://twitter.com/thomas_mock/status/1559618507444260864/photo/1>



## 4. EXTRAS

### CV

- El paquete [Rcademy](https://github.com/robjhyndman/Rcademy) permite buscar y pasar a df tus publicaciones y hace bastantes más cosas

```r
devtools::install_github("ropenscilabs/Rcademy")
library(Rcademy)
mypubs_bib <- read_bib("mypubs.bib")
mypubs_pubmed <- read_pubmed("Rob Hyndman")
mypubs_scholar <- read_scholar("PXaWcW4AAAAJ")     #- ok
mypubs_orcid <- read_orcid("0000-0001-9375-6330")  #- ok
```


- El paquete [pubmedr](https://github.com/jaytimm/pubmedr) busca en PubMed

```
med_cannabis <- pubmedr::pmed_search_pubmed(search_term = 'medical marijuana', 
                                            fields = c('TIAB','MH'))
```

- 

- **Scholia**: is a service that creates visual scholarly profiles for topics, people, organizations, species, chemicals, etc using bibliographic and other information in Wikidata <https://scholia.toolforge.org/>


- **ZEnodo**: un repositorio de acceso abierto donde quienes investigan depositan artículos, datos, software, informes, etc. Puede venir bien al buscar info para trabajos universitarios 😉
<https://zenodo.org/>  desarrollado bajo el programa europeo OpenAIRE y operado por CERN . Permite a cualquier  artefacto digital relacionado con la investigación. Para cada envío, se acuña un identificador de objeto digital persistente (DOI), lo que hace que los elementos almacenados se puedan citar fácilmente. 

### Details


- `<details>`: un ejemplo de lo q hace en html):
<https://github.com/benyamindsmith/starBliss/blob/main/README.md>

<details>
<summary>
<h3>Installing this package</h3>
</summary>
```r
# install.packages("devtools")
devtools::install_github("benyamindsmith/starBliss")
```
</details>



## 5. MARKDOWN

### Inline code

- Explican bien lo de scaping back-ticks: <https://www.markdownguide.org/basic-syntax/#escaping-backticks>. Estos [otros](https://rviews.rstudio.com/2017/12/04/how-to-show-r-inline-code-blocks-in-r-markdown/) no lo hacen tan bien

- inline literal code: `` ` r 2+2` ``              `` `abc` ``       ``` `` `abc` `` ```


- escribir esto: ``` `` `abc` `` ```   para que se muestre esto: `` `abc` `` 

- automatizar la creación de una bullet list: <https://stackoverflow.com/questions/74185749/automating-bullet-lists-in-quarto-with-word-output>

### meta-Markdown

- Pasar un enlace à la md, a enlace en html. [aquí](https://fosstodon.org/@smach/110028277680618243) hilo de Sharon


### cosas

- incluir **iframe**:

```{{{r}}}
#| echo: true
#- incluye un iframe
knitr::include_url({"https://quarto.org/docs/guide/"})
```

```html
<iframe src="https://quarto.org/" title="https://quarto.org/" width="960" height="500" data-external="1"></iframe>
```

- q los **enlaces se abran en pestaña nueva** has de poner `{target="_blank"}`


- **Convertir Inline footnotes** to Regular footnotes in Markdown: <https://yihui.org/en/2023/02/markdown-footnotes/>



## 6. PAQUETES

- [qrcode](https://scicomm.xyz/@TimVantilborgh/109450286791571326): pkg para **insertar QR**


## Instalación

- **prework de T. Mock**:   (creo q es solo para PDF) : In order to create PDFs you will need to install a recent distribution of LaTeX. We recommend the use of TinyTeX (which is based on TexLive):

```yaml
quarto install tool tinytext
quarto install tool chromium
```



## 7. TRULETES

Son trucos q no los voy a utilizar **nunca** pero quiero guardarlos


- @andrewheiss: Regular reminder that **@tjmahr's trick of storing model results as tab-completable lists** (by feeding data frames to split()) is ingenious and will forever change how you use inline chunks with <https://www.tjmahr.com/lists-knitr-secret-weapon/>

- buscar archivos que tengan `draft: true : grep -rl "draft: true"  `: <https://isaac-flath.tech/til/quartodrafts>


- Pilar beneito Otra posibilidad es usar la estrategia de Pilar Beneito en [su web](https://www.uv.es/beneito/). No podemos ver el código porque su web no está alojada en Github, pero Pilar amablemente me proporciono el código. Simplemente hay que poner en el archivo `_quarto.yml`, concretamente en el trozo donde especificamos la `navbar` de nuestra web, lo siguiente:

```html
 links:
  - label: '<img style="width:95px;" src="logo_AE.jpg" border="0" alt=""/></i>'
	url: "https://www.uv.es/uvweb/departamento-analisis-economico/... .html"
```


- `Hmisc::rendHTML()`: <https://fosstodon.org/@smach/110006219843294743>

- Mostrar las rows de una tabla poco a poco: <https://fosstodon.org/@yabellini/110097048443787861>

### WebR

- extensión para meter WebR: <https://bbs.crumplab.com/@MattCrump/110005745631956833>

- <https://github.com/coatless/quarto-webr>

- un ejemplo: <https://hachyderm.io/@ethanwhite/110010844578890215>

- hay un yaml: <https://fosstodon.org/@smach/110012527532778461>   si: <https://mastodon.social/@coatless/110012581159848485>

- Este post parece el refinitivo: <https://jabberwocky.weecology.org/2023/03/13/a-brief-introduction-to-using-webr-and-quarto-for-client-side-interactive-lesson-material/>

- el ejemplo redefinitivo: <https://rd.thecoatlessprofessor.com/webR-quarto-demos/webr-quarto-html-demo.html>


### ChatGPT

- **chatgpt-from-r**: <https://www.sumsar.net/blog/call-chatgpt-from-r/>

## 8. "Biblio"

- Más trucos (complicaetes y algunos rarunos para mi) de `.Rmd` de Elio Campitelli: <https://mastodon.social/@eliocamp/110209569783331181>

